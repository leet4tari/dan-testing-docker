
# source these envs before running build_images.sh

# example of envs used to build both AMD64 and ARM64 images combine,
#  hosted and pushed docker image provider

# docker environment needs to be already setup and logged in
#docker buildx create --use --name tari-builder --platform linux/arm64,linux/amd64
#docker run -it --rm --privileged tonistiigi/binfmt --install all

# Location of Tari source code
#export TARI_SOURCE_ROOT="../tari"
#export TARI_SOURCE_ROOT="../basenode/dists/leet/tari-build-arm64"
export TARI_SOURCE_ROOT="./source"

export TBN_ARCH=generic
#export TBN_ARCH=armv8.2-a
export TBN_FEATURES=safe

#export TL_TAG_URL=quay.io/tarilabs
export TL_TAG_URL=local-tarilabs
#export TL_TAG_ALIAS=latest
export TL_TAG_ALIAS=latest-leet

#export TL_TAG_BUILD_OPTS="buildx build --platform linux/amd64,linux/arm64 --push --no-cache"
#export TL_TAG_BUILD_OPTS="buildx build -o type=docker --platform linux/amd64"
#export TL_TAG_BUILD_OPTS="buildx build --progress=plain -o type=docker --platform linux/arm64"
export TL_TAG_BUILD_OPTS="\
  build \
    --progress=plain \
    --output type=docker \
    --platform linux/arm64 \
    --cache-from type=local,src=/tmp/docker-cache \
    --cache-to   type=local,dest=/tmp/docker-cache,mode=max \
"

#    --cache-from type=local,src=/tmp/docker-cache \

# Docker tag suffix for platform
export TL_TAG_BUILD_PF=-arm64

# Pull App version from file
#VAPP=$(awk -F ' = ' \
#    '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' \
#    "${TARI_SOURCE_ROOT}/tari/applications/tari_base_node/Cargo.toml")

VBRANCH=$(git --git-dir ${TARI_SOURCE_ROOT}/dan-testing/.git branch --show-current)
VSHA_SHORT=$(git --git-dir ${TARI_SOURCE_ROOT}/dan-testing/.git rev-parse --short HEAD)

#export SUBTAG_EXTRA="_v${VAPP}_${VBRANCH}_$(date -u '+%Y%m%d')_${VSHA_SHORT}"
export SUBTAG_EXTRA="_${VBRANCH}_$(date -u '+%Y%m%d')_${VSHA_SHORT}"
